imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: @NTEAgathoklesBundle/Resources/config/services.xml }

framework:
    #esi:             ~
    translator:      { fallback: "%locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_proxies: ~
    session:
        save_path: %kernel.root_dir%/var/sessions
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form:
        resources:
            - LexikFormFilterBundle:Form:form_div_layout.html.twig

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"
        types:
            json: Sonata\Doctrine\Types\JsonType

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        auto_mapping: true

#    orm:
#        entity_managers:
#            default:
#                mappings:
#                    SonataMediaBundle: ~


# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

sonata_admin:
    title:      Agathokles
    templates:
        layout:  NTEAgathoklesBundle::sonata_admin_base_layout.html.twig
        edit:    NTEAgathoklesBundle:CRUD:edit.html.twig

sonata_user:
    security_acl:     true
    class:
        user:         NTE\AgathoklesBundle\Entity\User
        group:        NTE\AgathoklesBundle\Entity\Group
    admin:                  # Admin Classes
        user:
            class:          Sonata\UserBundle\Admin\Entity\UserAdmin
            controller:     SonataAdminBundle:CRUD
            translation:    SonataUserBundle

        group:
            class:          Sonata\UserBundle\Admin\Entity\GroupAdmin
            controller:     SonataAdminBundle:CRUD
            translation:    SonataUserBundle
    profile:  # Profile Form (firstname, lastname, etc ...)
        form:
            type:               sonata_user_profile
            handler:            sonata.user.profile.form.handler.default
            name:               sonata_user_profile_form
            validation_groups:  [Profile]

sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.user.block.menu:    # used to display the menu in profile pages
        sonata.user.block.account: # used to display menu option (login option)
        # Enable the SonataAdminBundle block
        sonata.admin.block.admin_list:
            contexts:   [admin]
        # Your other blocks

fos_user:
    db_driver:      orm # can be orm or odm
    firewall_name:  main
#    user_class:     FOS\UserBundle\Entity\User
    user_class:     NTE\AgathoklesBundle\Entity\User

    group:
#        group_class:   FOS\UserBundle\Entity\Group
        group_class:   NTE\AgathoklesBundle\Entity\Group
        group_manager: sonata.user.orm.group_manager                    # If you're using doctrine orm (use sonata.user.mongodb.user_manager for mongodb)

    service:
        user_manager: sonata.user.orm.user_manager                      # If you're using doctrine orm (use sonata.user.mongodb.group_manager for mongodb)

    profile:  # Authentication Form
        form:
            type:               fos_user_profile
            #handler:            fos_user.profile.form.handler.default
            name:               fos_user_profile_form
            #validation_groups:  [Authentication] # Please note : this is not the default value

#doctrine_phpcr:
#    odm:
#        auto_mapping: true
#        mappings:
#            SonataMediaBundle:
#                prefix: Sonata\MediaBundle\PHPCR

sonata_media:
    # if you don't use default namespace configuration
    #class:
    #    media: MyVendor\MediaBundle\Entity\Media
    #    gallery: MyVendor\MediaBundle\Entity\Gallery
    #    gallery_has_media: MyVendor\MediaBundle\Entity\GalleryHasMedia
    default_context: default
    db_driver: doctrine_orm # or doctrine_mongodb, doctrine_phpcr
    contexts:
        default:  # the default context is mandatory
            providers:
                - sonata.media.provider.image

            formats:
                thumb: { width: 80 , quality: 70}
                small: { width: 100 , quality: 70}
                ppt:   { width: 600 , quality: 70}
                big:   { width: 1200 , quality: 70}
                index: { width: 290, height: 175, quality: 100, constraint: false }

    filesystem:
        local:
            directory:  %kernel.root_dir%/../web/uploads/media
            create:     false

    providers:
        image:
            resizer: sonata.media.resizer.fixedDimensions

sonata_doctrine_orm_admin:
    templates:
      types:
        list:
          html: NTEAgathoklesBundle::list_html.html.twig
        show:
          html: NTEAgathoklesBundle::show_html.html.twig

services:
    pagerfanta.view.my_view_1:
        class: Pagerfanta\View\OptionableView
        arguments:
            - @pagerfanta.view.default
            - { proximity: 5 }
        tags: [{ name: pagerfanta.view, alias: my_view_1 }]
    sonata.media.resizer.fixedDimensions:
        class: Application\Sonata\MediaBundle\Resizer\FixedDimensionsResizer
        arguments: [@sonata.media.adapter.image.gd, 'outbound', @sonata.media.metadata.proxy]

white_october_pagerfanta:
    default_view: my_view_1

lexik_form_filter:
    where_method: and
